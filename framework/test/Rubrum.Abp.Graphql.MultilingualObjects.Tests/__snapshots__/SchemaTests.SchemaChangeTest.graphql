schema {
  query: Query
}

interface EntityOfGuid {
  id: ID!
}

interface IHasExtraProperties {
  extraProperties: JSON
}

"The node interface is implemented by entities that have a global unique identifier."
interface Node {
  id: ID!
}

type Country implements EntityOfGuid & Node {
  id: ID!
  translation(culture: String): CountryTranslation
  translations(where: CountryTranslationFilterInput order: [CountryTranslationSortInput!]): [CountryTranslation!]!
}

type CountryTranslation {
  name: String!
  language: String!
}

type Query {
  "Fetches an object given its ID."
  node("ID of the object." id: ID!): Node
  "Lookup nodes by a list of IDs."
  nodes("The list of node IDs." ids: [ID!]!): [Node]!
  country: Country!
}

input CountryTranslationFilterInput {
  and: [CountryTranslationFilterInput!]
  or: [CountryTranslationFilterInput!]
  name: StringOperationFilterInput
  language: StringOperationFilterInput
}

input CountryTranslationSortInput {
  name: SortEnumType
  language: SortEnumType
}

input DateOnlyOperationFilterInput {
  and: [DateOnlyOperationFilterInput!]
  or: [DateOnlyOperationFilterInput!]
  eq: Date
  neq: Date
  in: [Date!]
  nin: [Date!]
  gt: Date
  ngt: Date
  gte: Date
  ngte: Date
  lt: Date
  nlt: Date
  lte: Date
  nlte: Date
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
  VALIDATION
}

enum SortEnumType {
  ASC
  DESC
}

directive @allowAnonymous repeatable on FIELD_DEFINITION

directive @authorize("The name of the authorization policy that determines access to the annotated resource." policy: String "Roles that are allowed to access the annotated resource." roles: [String!] "Defines when when the authorize directive shall be applied.By default the authorize directives are applied during the validation phase." apply: ApplyPolicy! = BEFORE_RESOLVER) repeatable on OBJECT | FIELD_DEFINITION

"The `Date` scalar represents an ISO-8601 compliant date type."
scalar Date

scalar JSON