schema {
  query: Query
  mutation: Mutation
}

interface Error {
  message: String!
}

"The node interface is implemented by entities that have a global unique identifier."
interface Node {
  id: ID!
}

type BusinessError implements Error {
  code: String
  details: String
  message: String!
}

type Country implements Node {
  id: ID!
  name: String!
}

type CreateCountryPayload {
  country: Country
  errors: [CreateCountryError!]
}

type EntityNotFoundError implements Error {
  id: String
  message: String!
  type: String
}

type Mutation {
  createCountry(input: CreateCountryInput!): CreateCountryPayload!
}

type Query {
  country: Country!
  "Fetches an object given its ID."
  node("ID of the object." id: ID!): Node
  "Lookup nodes by a list of IDs."
  nodes("The list of node IDs." ids: [ID!]!): [Node]!
}

type ValidationError implements Error {
  message: String!
  results: [ValidationResult!]!
}

type ValidationResult {
  errorMessage: String
}

union CreateCountryError = ValidationError | BusinessError | EntityNotFoundError

input CreateCountryInput {
  "IMaximumLengthValidator,\n IMinimumLengthValidator,\n INotEmptyValidator"
  name: String!
}

input DateOnlyOperationFilterInput {
  and: [DateOnlyOperationFilterInput!]
  or: [DateOnlyOperationFilterInput!]
  eq: Date
  neq: Date
  in: [Date!]
  nin: [Date!]
  gt: Date
  ngt: Date
  gte: Date
  ngte: Date
  lt: Date
  nlt: Date
  lte: Date
  nlte: Date
}

enum ApplyPolicy {
  BEFORE_RESOLVER
  AFTER_RESOLVER
  VALIDATION
}

directive @allowAnonymous repeatable on FIELD_DEFINITION

directive @authorize("Defines when when the authorize directive shall be applied.By default the authorize directives are applied during the validation phase." apply: ApplyPolicy! = BEFORE_RESOLVER "The name of the authorization policy that determines access to the annotated resource." policy: String "Roles that are allowed to access the annotated resource." roles: [String!]) repeatable on OBJECT | FIELD_DEFINITION

"The `@oneOf` directive is used within the type system definition language\n to indicate:\n\n - an Input Object is a Oneof Input Object, or\n - an Object Type's Field is a Oneof Field."
directive @oneOf on INPUT_OBJECT

"The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
directive @specifiedBy("The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types." url: String!) on SCALAR

"The `Date` scalar represents an ISO-8601 compliant date type."
scalar Date

scalar UUID @specifiedBy(url: "https:\/\/tools.ietf.org\/html\/rfc4122")